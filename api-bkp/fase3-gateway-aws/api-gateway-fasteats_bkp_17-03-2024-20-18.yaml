openapi: "3.0.1"
info:
  title: "fasteats"
  description: "API Gateway para projeto feasteats"
  version: "v.1.0.0"
servers:
- url: "https://mn71pc2qi7.execute-api.us-east-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "prod"
paths:
  /status-pedidos:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/status-pedidos"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
    post:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/status-pedidos"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /sts-token:
    post:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:730335661438:function:lambda_sts/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
  /producao-pedido/{idPedido}/finalizar-preparo:
    patch:
      parameters:
      - name: "idPedido"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "PATCH"
        uri: "http://load-balancer-cozinha-1458632615.us-east-1.elb.amazonaws.com/producao-pedido/{idPedido}/finalizar-preparo"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.idPedido: "method.request.path.idPedido"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pagamentos/{id}/alterar-forma-pagamento:
    put:
      parameters:
      - name: "idFormaPagamento"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "PUT"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/pagamentos/{id}/alterar-forma-pagamento"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pagamentos/{id}/reprocessar-pagamento:
    post:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/pagamentos/{id}/reprocessar-pagamento"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /solicitacao-usuario/desativar-usuario:
    post:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/solicitacao-usuario/desativar-usuario"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /categorias:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/categorias"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
    post:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/categorias"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /clientes/pesquisar-id/{id}:
    get:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/clientes/pesquisar-id/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.cpf: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pagamentos/{id}/consultar-pagamento-por-id-pedido:
    get:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/pagamentos/{id}/consultar-pagamento-por-id-pedido"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pagamentos/{id}/cancelar-pagamento:
    post:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/pagamentos/{id}/cancelar-pagamento"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /producao-pedido/{idPedido}/iniciar-preparo:
    patch:
      parameters:
      - name: "idPedido"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "PATCH"
        uri: "http://load-balancer-cozinha-1458632615.us-east-1.elb.amazonaws.com/producao-pedido/{idPedido}/iniciar-preparo"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.idPedido: "method.request.path.idPedido"
        passthroughBehavior: "when_no_match"
        type: "http"
  /gerenciar/pedidos/{id}:
    get:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/gerenciar/pedidos/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /produto-pedido/{idPedido}/produtos:
    post:
      parameters:
      - name: "idPedido"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/produto-pedido/{idPedido}/produtos"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.idPedido: "method.request.path.idPedido"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pagamentos/{id}/realizar-pagamento:
    post:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/pagamentos/{id}/realizar-pagamento"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /cozinha-pedido/{cozinhaId}:
    get:
      operationId: "get/cozinha-pedido/{cozinhaId}"
      parameters:
      - name: "cozinhaId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-cozinha-1458632615.us-east-1.elb.amazonaws.com/cozinha-pedido/{cozinhaId}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.cozinhaId"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pedidos/{idPedido}:
    get:
      parameters:
      - name: "idPedido"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/pedidos/{idPedido}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.idPedido: "method.request.path.idPedido"
        passthroughBehavior: "when_no_match"
        type: "http"
    delete:
      parameters:
      - name: "idPedido"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "DELETE"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/pedidos/{idPedido}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.idPedido: "method.request.path.idPedido"
        passthroughBehavior: "when_no_match"
        type: "http"
    patch:
      parameters:
      - name: "idPedido"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "PATCH"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/pedidos/{idPedido}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.idPedido: "method.request.path.idPedido"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pagamento-externo/mercadopago-webhook-simulacao:
    post:
      operationId: "webhookPagamentoSimulacao"
      parameters:
      - name: "idPagamentoExterno"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "statusMercadoPago"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/pagamento-externo/mercadopago-webhook-simulacao"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.querystring.statusMercadoPago: "method.request.querystring.statusMercadoPago"
          integration.request.querystring.idPagamentoExterno: "method.request.querystring.idPagamentoExterno"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pagamentos:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/pagamentos"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pagamentos/{id}:
    get:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/pagamentos/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pagamentos/{id}/enviar-pedido-pago-cozinha:
    post:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/pagamentos/{id}/enviar-pedido-pago-cozinha"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /produtos/{id}:
    get:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/produtos/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
    delete:
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "DELETE"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/produtos/{id}"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.Authorization: "method.request.header.Authorization"
        passthroughBehavior: "when_no_match"
        type: "http"
    patch:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "PATCH"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/produtos/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /clientes:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/clientes"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
    post:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/clientes"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pagamentos/{id}/consultar-por-id-pagamento-externo:
    get:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/pagamentos/{id}/consultar-por-id-pagamento-externo"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pagamento-externo/mercadopago/{idPagamentoExterno}/cancelar:
    post:
      parameters:
      - name: "idPagamentoExterno"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/pagamento-externo/mercadopago/{idPagamentoExterno}/cancelar"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.idPagamentoExterno: "method.request.path.idPagamentoExterno"
        passthroughBehavior: "when_no_match"
        type: "http"
  /status-pagamentos/{id}:
    get:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/status-pagamentos/{id}"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /forma-pagamento:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/forma-pagamento"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
    post:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/forma-pagamento"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pedidos:
    get:
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/pedidos"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.Authorization: "method.request.header.Authorization"
        passthroughBehavior: "when_no_match"
        type: "http"
    post:
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/pedidos"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.Authorization: "method.request.header.Authorization"
        passthroughBehavior: "when_no_match"
        type: "http"
  /cozinha-pedido:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-cozinha-1458632615.us-east-1.elb.amazonaws.com/cozinha-pedido"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /status-pagamentos:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/status-pagamentos"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pedidos/{idPedido}/confirmar:
    patch:
      parameters:
      - name: "idPedido"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "tipoPagamentoId"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "PATCH"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/pedidos/{idPedido}/confirmar"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.querystring.tipoPagamentoId: "method.request.querystring.tipoPagamentoId"
          integration.request.path.idPedido: "method.request.path.idPedido"
        passthroughBehavior: "when_no_match"
        type: "http"
  /producao-pedido/{idPedido}/retirar:
    patch:
      parameters:
      - name: "idPedido"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "PATCH"
        uri: "http://load-balancer-cozinha-1458632615.us-east-1.elb.amazonaws.com/producao-pedido/{idPedido}/retirar"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.idPedido: "method.request.path.idPedido"
        passthroughBehavior: "when_no_match"
        type: "http"
  /forma-pagamento/consultar-por-nome/{nome}:
    get:
      parameters:
      - name: "nome"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/forma-pagamento/consultar-por-nome/{nome}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.nome: "method.request.path.nome"
        passthroughBehavior: "when_no_match"
        type: "http"
  /categorias/consultar-por-nome/{nome}:
    get:
      parameters:
      - name: "nome"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/categorias/consultar-por-nome/{nome}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.nome: "method.request.path.nome"
        passthroughBehavior: "when_no_match"
        type: "http"
  /produtos/consultar-por-categoria/{categoriaId}:
    get:
      parameters:
      - name: "categoriaId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/produtos/consultar-por-categoria/{categoriaId}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.categoriaId: "method.request.path.categoriaId"
        passthroughBehavior: "when_no_match"
        type: "http"
  /produto-pedido/{idPedido}/produtos/{idProduto}:
    delete:
      parameters:
      - name: "idPedido"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "idProduto"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "DELETE"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/produto-pedido/{idPedido}/produtos/{idProduto}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.idProduto: "method.request.path.idProduto"
          integration.request.path.idPedido: "method.request.path.idPedido"
        passthroughBehavior: "when_no_match"
        type: "http"
    patch:
      parameters:
      - name: "idPedido"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "idProduto"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "PATCH"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/produto-pedido/{idPedido}/produtos/{idProduto}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.idProduto: "method.request.path.idProduto"
          integration.request.path.idPedido: "method.request.path.idPedido"
        passthroughBehavior: "when_no_match"
        type: "http"
  /cozinha-pedido/pedido/{idPedido}:
    get:
      operationId: "get/cozinha-pedido/pedido/{idPedido}"
      parameters:
      - name: "idPedido"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-cozinha-1458632615.us-east-1.elb.amazonaws.com/cozinha-pedido/pedido/{idPedido}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.idPedido: "method.request.path.idPedido"
        passthroughBehavior: "when_no_match"
        type: "http"
  /status-pagamentos/consultar-por-nome/{nome}:
    get:
      parameters:
      - name: "nome"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/status-pagamentos/consultar-por-nome/{nome}"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /produtos/consultar-por-nome/{nome}:
    get:
      parameters:
      - name: "nome"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/produtos/consultar-por-nome/{nome}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.nome: "method.request.path.nome"
        passthroughBehavior: "when_no_match"
        type: "http"
  /solicitacao-usuario/excluir-usuario:
    post:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/solicitacao-usuario/excluir-usuario"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pagamento-externo/mercadopago-webhook:
    post:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/pagamento-externo/mercadopago-webhook"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /produtos:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/produtos"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
    post:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/produtos"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /status-pedidos/consultar-por-nome/{nome}:
    get:
      parameters:
      - name: "nome"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/status-pedidos/consultar-por-nome/{nome}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.nome: "method.request.path.nome"
        passthroughBehavior: "when_no_match"
        type: "http"
  /status-pedidos/{id}:
    get:
      operationId: "get/status-pedidos/{id}"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/status-pedidos/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
    delete:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "DELETE"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/status-pedidos/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
    patch:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "PATCH"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/status-pedidos/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /gerenciar/pedidos/andamento:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/gerenciar/pedidos/andamento"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /forma-pagamento/{id}:
    get:
      operationId: "get/forma-pagamento/{id}"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/forma-pagamento/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
    delete:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "DELETE"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/forma-pagamento/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
    patch:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "PATCH"
        uri: "http://load-balancer-pagamento-693861571.us-east-1.elb.amazonaws.com/forma-pagamento/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /categorias/{id}:
    get:
      operationId: "get/categorias/{id}"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/categorias/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
    delete:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "DELETE"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/categorias/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
    patch:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "PATCH"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/categorias/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http"
  /pedidos/{idPedido}/cancelar:
    patch:
      parameters:
      - name: "idPedido"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "PATCH"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/pedidos/{idPedido}/cancelar"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.idPedido: "method.request.path.idPedido"
        passthroughBehavior: "when_no_match"
        type: "http"
  /clientes/{cpf}:
    get:
      parameters:
      - name: "cpf"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/clientes/{cpf}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.cpf: "method.request.path.cpf"
        passthroughBehavior: "when_no_match"
        type: "http"
    delete:
      parameters:
      - name: "cpf"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "DELETE"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/clientes/{cpf}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.cpf: "method.request.path.cpf"
        passthroughBehavior: "when_no_match"
        type: "http"
    patch:
      parameters:
      - name: "cpf"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - lambda-authorizer: []
      x-amazon-apigateway-integration:
        httpMethod: "PATCH"
        uri: "http://load-balancer-pedido-1114194348.us-east-1.elb.amazonaws.com/clientes/{cpf}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.cpf: "method.request.path.cpf"
        passthroughBehavior: "when_no_match"
        type: "http"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
  securitySchemes:
    lambda-authorizer:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "custom"
      x-amazon-apigateway-authorizer:
        authorizerUri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:730335661438:function:lambda_authorizer/invocations"
        authorizerCredentials: "arn:aws:iam::730335661438:role/LabRole"
        authorizerResultTtlInSeconds: 300
        identitySource: "method.request.header.Authorization"
        type: "request"
